{"ast":null,"code":"// App Reducer will help specify app state changes in response to our (global) context\n//  it takes in state and an action\n//  we have 3 action types: default/add/delete transaction\n// DELETE_TRANSACTION case- reducer is a way to change the state and send it down to the app\n//  in this case, we have to create a new state (that excludes the deleted transaction)\n//  and pass it down. we create a new one bc we cant really change the existing state\nexport default ((state, action) => {\n  switch (action.type) {\n    case 'GET_TRANSACTIONS':\n      return { ...state,\n        loading: false,\n        transactions: action.payload // transactions was initially an empty array, no we fill it up with our payload\n\n      };\n\n    case 'TRANSACTIONS_ERROR':\n      return { ...state,\n        loading: false\n      };\n\n    case 'DELETE_TRANSACTION':\n      console.log(action.payload);\n      return { ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      };\n\n    case 'ADD_TRANSACTION':\n      return { ...state,\n        // we add our new transaction do our existing ones\n        transactions: [action.payload, ...state.transactions]\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/safiyamufti/Desktop/expense-tracker-react/client/src/context/AppReducer.js"],"names":["state","action","type","loading","transactions","payload","console","log","filter","transaction","id"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA,gBAAc,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,kBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,YAAY,EAAEH,MAAM,CAACI,OAHlB,CAG0B;;AAH1B,OAAP;;AAKJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHG,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAMJ,SAAK,oBAAL;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,OAAnB;AACC,aAAO,EACH,GAAGL,KADA;AAEHI,QAAAA,YAAY,EACZJ,KAAK,CAACI,YAAN,CAAmBI,MAAnB,CAA0BC,WAAW,IACjCA,WAAW,CAACC,EAAZ,KAAmBT,MAAM,CAACI,OAD9B;AAHG,OAAP;;AAML,SAAK,iBAAL;AACQ,aAAO,EACL,GAAGL,KADE;AAEL;AACAI,QAAAA,YAAY,EAAE,CAACH,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACI,YAA1B;AAHT,OAAP;;AAKR;AACI,aAAOJ,KAAP;AA7BR;AA+BH,CAhCD","sourcesContent":["// App Reducer will help specify app state changes in response to our (global) context\n//  it takes in state and an action\n//  we have 3 action types: default/add/delete transaction\n\n// DELETE_TRANSACTION case- reducer is a way to change the state and send it down to the app\n//  in this case, we have to create a new state (that excludes the deleted transaction)\n//  and pass it down. we create a new one bc we cant really change the existing state\n\nexport default(state, action) => {\n    switch(action.type) {\n        case 'GET_TRANSACTIONS':\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload // transactions was initially an empty array, no we fill it up with our payload\n            }\n        case 'TRANSACTIONS_ERROR':\n            return {\n                ...state,\n                loading: false,\n                \n\n            }\n        case 'DELETE_TRANSACTION':\n            console.log(action.payload);\n             return {\n                 ...state,\n                 transactions: \n                 state.transactions.filter(transaction =>\n                     transaction.id !== action.payload)\n             }\n        case 'ADD_TRANSACTION':\n                return {\n                  ...state,\n                  // we add our new transaction do our existing ones\n                  transactions: [action.payload, ...state.transactions]\n                }\n        default:\n            return state; \n    }\n}"]},"metadata":{},"sourceType":"module"}