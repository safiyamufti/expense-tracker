{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/safiyamufti/Desktop/expense-tracker-react/client/src/components/TransactionList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { Transaction } from './Transaction'; // we can pull anything from our GlobalContext using the useContext hook\n\nexport const TransactionList = () => {\n  _s();\n\n  const {\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    getTransactions(); // eslint-disable\n  }, []); // transactions is an array, so we have to loop/map through\n  // to access each element \n  // we pass our current transaction from GlobalContext in as a prop\n  // we map through, and so for each one we're going to render a transaction\n  // component and pass in a prop\n  // since this is a list, it needs to have a unique key\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" History \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n        transaction: transaction\n      }, transaction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionList, \"DKGSk0eoeUisnmIwRGTxqptIO0M=\");\n\n_c = TransactionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"sources":["/Users/safiyamufti/Desktop/expense-tracker-react/client/src/components/TransactionList.js"],"names":["React","useContext","useEffect","GlobalContext","Transaction","TransactionList","transactions","getTransactions","map","transaction","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA+B,wBAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAGA;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCN,UAAU,CAACE,aAAD,CAApD;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACbK,IAAAA,eAAe,GADF,CAEb;AAEH,GAJQ,EAIN,EAJM,CAAT,CAHiC,CAQjC;AACA;AACA;AACA;AACA;AACA;;AACA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACCD,YAAY,CAACE,GAAb,CAAiBC,WAAW,iBAC7B,QAAE,WAAF;AAAmC,QAAA,WAAW,EAAEA;AAAhD,SAAmBA,WAAW,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA,cADC;AADD;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAYH,CA1BM;;GAAML,e;;KAAAA,e","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport { GlobalContext }  from '../context/GlobalState';\nimport { Transaction } from './Transaction';\n\n\n// we can pull anything from our GlobalContext using the useContext hook\n\nexport const TransactionList = () => {\n    const { transactions, getTransactions } = useContext(GlobalContext);\n\n    useEffect( () => {\n        getTransactions();\n        // eslint-disable\n\n    }, []);\n    // transactions is an array, so we have to loop/map through\n    // to access each element \n    // we pass our current transaction from GlobalContext in as a prop\n    // we map through, and so for each one we're going to render a transaction\n    // component and pass in a prop\n    // since this is a list, it needs to have a unique key\n    return (\n        <>\n        <h3> History </h3>\n        <ul className=\"list\"> \n        {transactions.map(transaction => (\n        < Transaction key={transaction.id} transaction={transaction} />\n        ))}\n\n        </ul>\n            \n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}