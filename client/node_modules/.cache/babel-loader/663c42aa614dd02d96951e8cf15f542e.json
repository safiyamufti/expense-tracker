{"ast":null,"code":"/*\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n\n// initial state\n\nconst initialState = {\n    transactions: [\n        { id: 1, text: 'Flowers', amount: -20 },\n        { id: 2, text: 'Depop', amount: +25 },\n        { id: 4, text: 'Uber', amount: -11 },\n        { id: 5, text: 'Salary', amount: +2000},\n        \n    ]\n}\n\n// global state\n// create context\n\nexport const GlobalContext = createContext(initialState);\n\n// in order for other components to have access to our globalState, we need to have a provider\n// we need to wrap all our components in a provider component\n// we need to export this to make it available to our App file\n\n// Provider component \n// all our components that we are wrapping are the children\n// whenever we want to call a reducer action, we call dispatch\n\nexport const GlobalProvider=  ( {children} ) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Actions\n    function deleteTransaction(id) {\n        dispatch( {\n            type: 'DELETE_TRANSACTION',\n            paylod: id\n        });\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n          type: 'ADD_TRANSACTION',\n          payload: transaction\n        });\n      }\n\n// to use an action, we need to make sure we pass it down in the provider\n\n    return( <GlobalContext.Provider value= {{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n\n    </GlobalContext.Provider>);\n}\n\n*/","map":{"version":3,"sources":["/Users/safiyamufti/Desktop/expense-tracker-react/src/context/GlobalState.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n\n// initial state\n\nconst initialState = {\n    transactions: [\n        { id: 1, text: 'Flowers', amount: -20 },\n        { id: 2, text: 'Depop', amount: +25 },\n        { id: 4, text: 'Uber', amount: -11 },\n        { id: 5, text: 'Salary', amount: +2000},\n        \n    ]\n}\n\n// global state\n// create context\n\nexport const GlobalContext = createContext(initialState);\n\n// in order for other components to have access to our globalState, we need to have a provider\n// we need to wrap all our components in a provider component\n// we need to export this to make it available to our App file\n\n// Provider component \n// all our components that we are wrapping are the children\n// whenever we want to call a reducer action, we call dispatch\n\nexport const GlobalProvider=  ( {children} ) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Actions\n    function deleteTransaction(id) {\n        dispatch( {\n            type: 'DELETE_TRANSACTION',\n            paylod: id\n        });\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n          type: 'ADD_TRANSACTION',\n          payload: transaction\n        });\n      }\n\n// to use an action, we need to make sure we pass it down in the provider\n\n    return( <GlobalContext.Provider value= {{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n\n    </GlobalContext.Provider>);\n}\n\n*/\n"]},"metadata":{},"sourceType":"module"}