{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/safiyamufti/Desktop/expense-tracker-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{GlobalContext}from'../context/GlobalState';// for the form we need component level state, \n// bc we need our inputs to be part of the state, \n// so we introduce a useState hook, called text and setText\nexport var AddTransaction=function AddTransaction(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useContext=useContext(GlobalContext),addTransaction=_useContext.addTransaction;var onSubmit=function onSubmit(e){e.preventDefault();var newTransaction={id:Math.floor(Math.random()*100000000),text:text,amount:+amount};// my later edits\ntext===''||amount===0?setText(''):addTransaction(newTransaction);setText('');setAmount(0);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\" Add new transaction\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\" Description \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:text,onChange:function onChange(e){return setText(e.target.value);},placeholder:\"Enter description...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"amount\",children:[\"Amount \",/*#__PURE__*/_jsx(\"br\",{}),\"( - expense, + income ) \"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:amount,onChange:function onChange(e){return setAmount(e.target.value);},placeholder:\"Enter amount...\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",children:\" Add transaction \"})]})]});};","map":{"version":3,"sources":["/Users/safiyamufti/Desktop/expense-tracker-react/client/src/components/AddTransaction.js"],"names":["React","useState","useContext","GlobalContext","AddTransaction","text","setText","amount","setAmount","addTransaction","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","target","value"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,UAAzB,KAA0C,OAA1C,CACA,OAASC,aAAT,KAA8B,wBAA9B,CAEA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACZH,QAAQ,CAAC,EAAD,CADI,wCAC7BI,IAD6B,eACvBC,OADuB,8BAERL,QAAQ,CAAC,CAAD,CAFA,yCAE7BM,MAF6B,eAErBC,SAFqB,+BAITN,UAAU,CAACC,aAAD,CAJD,CAI5BM,cAJ4B,aAI5BA,cAJ4B,CAKpC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CAClBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,cAAc,CAAG,CACnBC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,SAA3B,CADe,CAEnBZ,IAAI,CAAJA,IAFmB,CAGnBE,MAAM,CAAE,CAACA,MAHU,CAAvB,CAKA;AACAF,IAAI,GAAK,EAAT,EAAeE,MAAM,GAAK,CAA1B,CAA8BD,OAAO,CAAC,EAAD,CAArC,CAA4CG,cAAc,CAACI,cAAD,CAA1D,CACAP,OAAO,CAAC,EAAD,CAAP,CACAE,SAAS,CAAC,CAAD,CAAT,CACH,CAXD,CAYI,mBACI,wCACI,4CADJ,cAEI,cAAM,QAAQ,CAAEE,QAAhB,wBACI,aAAK,SAAS,CAAC,cAAf,wBACI,cAAO,OAAO,CAAC,MAAf,2BADJ,cAEA,cAAO,IAAI,CAAC,MAAZ,CACA,KAAK,CAAEL,IADP,CAEA,QAAQ,CAAE,kBAACM,CAAD,QAAOL,CAAAA,OAAO,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd,EAFV,CAGA,WAAW,CAAE,sBAHb,EAFA,GADJ,cAQC,aAAK,SAAS,CAAC,cAAf,wBACI,eAAO,OAAO,CAAC,QAAf,kCACW,aADX,8BADJ,cAKO,cAAO,IAAI,CAAC,QAAZ,CACA,KAAK,CAAEZ,MADP,CAEA,QAAQ,CAAE,kBAACI,CAAD,QAAOH,CAAAA,SAAS,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CAAhB,EAFV,CAGC,WAAW,CAAE,iBAHd,EALP,GARD,cAkBJ,eAAQ,SAAS,CAAC,KAAlB,+BAlBI,GAFJ,GADJ,CA0BH,CA3CM","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\n// for the form we need component level state, \n// bc we need our inputs to be part of the state, \n// so we introduce a useState hook, called text and setText\n\nexport const AddTransaction = () => { \nconst [text, setText] = useState('');\nconst [amount, setAmount] = useState(0);\n\nconst { addTransaction } = useContext(GlobalContext);\nconst onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n        id: Math.floor(Math.random() * 100000000),\n        text,\n        amount: +amount\n    }\n    // my later edits\n    text === '' || amount === 0 ? setText('') : addTransaction(newTransaction);\n    setText('');\n    setAmount(0);\n}\n    return (\n        <>\n            <h3> Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\"> Description </label>\n                <input type=\"text\" \n                value={text} \n                onChange={(e) => setText(e.target.value)}\n                placeholder= \"Enter description...\" />\n             </div>\n             <div className=\"form-control\">\n                 <label htmlFor=\"amount\">\n                     Amount <br />\n                    ( - expense, + income ) </label>\n\n                    <input type=\"number\"\n                    value={amount} \n                    onChange={(e) => setAmount(e.target.value)}\n                     placeholder= \"Enter amount...\" />\n             </div>\n        <button className=\"btn\"> Add transaction </button>\n        </form>\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}