{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/safiyamufti/Desktop/expense-tracker-react/src/components/AddTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // for the form we need component level state, \n// bc we need our inputs to be part of the state, \n// so we introduce a useState hook, called text and setText\n\nexport const AddTransaction = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \" Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), \"( - for an expense, + for an income ) \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Enter amount...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \" Add transaction  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTransaction, \"CnNvQym3xDJuf6luC52qF0cqooc=\");\n\n_c = AddTransaction;\ngbthgb;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["/Users/safiyamufti/Desktop/expense-tracker-react/src/components/AddTransaction.js"],"names":["React","useState","AddTransaction","text","setText","amount","setAmount","e","target","value","gbthgb"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAD,CAApC;AAEI,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,KAAK,EAAEE,IADP;AAEA,UAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAFxB;AAGA,UAAA,WAAW,EAAE;AAHb;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,6CACW;AAAA;AAAA;AAAA;AAAA,kBADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKO;AAAO,UAAA,IAAI,EAAC,QAAZ;AACA,UAAA,KAAK,EAAEJ,MADP;AAEA,UAAA,QAAQ,EAAGE,CAAD,IAAOD,SAAS,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGC,UAAA,WAAW,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA,gBALP;AAAA;AAAA;AAAA;AAAA;AAAA,cARD,eAkBJ;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBI;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AA0BH,CA9BM;;GAAMP,c;;KAAAA,c;AA+BbQ,MAAM","sourcesContent":["import React, {useState} from 'react'\n\n// for the form we need component level state, \n// bc we need our inputs to be part of the state, \n// so we introduce a useState hook, called text and setText\n\nexport const AddTransaction = () => { \nconst [text, setText] = useState('');\nconst [amount, setAmount] = useState(0);\n\n    return (\n        <>\n            <h3> Add new transaction</h3>\n            <form>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\"> Description </label>\n                <input type=\"text\" \n                value={text} \n                onChange={(e) => setText(e.target.value)}\n                placeholder= \"Enter description...\" />\n             </div>\n             <div className=\"form-control\">\n                 <label htmlFor=\"amount\">\n                     Amount <br />\n                    ( - for an expense, + for an income ) </label>\n\n                    <input type=\"number\"\n                    value={amount} \n                    onChange={(e) => setAmount(e.target.value)}\n                     placeholder= \"Enter amount...\" />\n             </div>\n        <button className=\"btn\"> Add transaction  </button>\n        </form>\n\n        </>\n    )\n}\ngbthgb"]},"metadata":{},"sourceType":"module"}